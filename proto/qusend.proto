syntax = "proto3";

package qusend;

message PasswordMetadata {
  bytes url_name = 1;
  bytes username = 2;
  bytes otp = 3;
}

message CreateUserRequest {
  bytes public_dilithium_key = 1;
  bytes public_kyber_key = 2;
  bytes salt = 3;
}

message CreateUserResponse {
  uint64 id = 1;
  uint32 code = 2;
}
message InitCommunicationRequest {
  uint64 user_id = 1;
}

message InitCommunicationResponse {
  bytes ciphertext = 1;
}

message AddPasswordRequest {
  uint64 user_id = 1;
  bytes nonce = 2;
  bytes ciphertext = 3;
}

message AddPasswordResponse {
  PasswordMetadata metadata = 1;
  uint32 code = 2;
  uint64 password_id = 3;
}

message AuthenticateStartRequest {
  uint64 user_id = 1;
}

message AuthenticateStartResponse {
  bytes challenge = 1;
}

message AuthenticateRequest {
  uint64 user_id = 1;
  bytes signature = 2;
}

message AuthenticateResponse {
  uint32 code = 1;
  uint64 auth_token = 2;
}

message RetrievePasswordRequest {
  uint64 user_id = 1;
  uint64 password_id = 2;
}

message RetrievePasswordResponse {
  bytes ciphertext = 1;
  uint32 code = 2;
}

message DeletePasswordRequest {
  uint64 user_id = 1;
  uint64 password_id = 2;
}

message DeletePasswordResponse {
  uint32 code = 1;
}

message UpdatePasswordRequest {
  uint64 user_id = 1;
  uint64 password_id = 2;
  bytes nonce = 3;
  bytes ciphertext = 4;
}

message UpdatePasswordResponse {
  uint32 code = 1;
}

message ListPasswordsRequest {
  uint64 user_id = 1;
}

message ListPasswordsResponse {
  repeated PasswordMetadata metadata = 1;
  uint32 code = 2;
}

service PasswordManager {
  // User Creation
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);



  // Communication Initialization
  rpc InitCommunication(InitCommunicationRequest) returns (InitCommunicationResponse);

  //Auth Start 
  rpc AuthenticateStart(AuthenticateStartRequest) returns (AuthenticateStartResponse);

  // Auth
  rpc Authenticate(AuthenticateRequest) returns (AuthenticateResponse);


  // Add a password
  rpc AddPassword(AddPasswordRequest) returns (AddPasswordResponse);


  // Retrieve password
  rpc RetrievePassword(RetrievePasswordRequest) returns (RetrievePasswordResponse);


  // Delete password
  rpc DeletePassword(DeletePasswordRequest) returns (DeletePasswordResponse);


  // Update password
  rpc UpdatePassword(UpdatePasswordRequest) returns (UpdatePasswordResponse);


  // List passwords
  rpc ListPasswords(ListPasswordsRequest) returns (ListPasswordsResponse);

}
